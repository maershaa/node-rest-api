// !Этот код использует библиотеку @sendgrid/mail для отправки электронных писем с использованием сервиса SendGrid. SendGrid - это посредник (или поставщик услуг по отправке электронных писем), который обеспечивает API и инфраструктуру для отправки электронных писем. Ваш сервер, используя библиотеку @sendgrid/mail, формирует и отправляет электронное письмо через API SendGrid.
const sgMail = require("@sendgrid/mail");
require("dotenv").config();
const { SENDGRID_API_KEY } = process.env;
sgMail.setApiKey(SENDGRID_API_KEY);

const sendEmail = async (data) => {
  const email = {
    ...data,
    from: "oderjimaya2017@gmail.com",
  };
  await sgMail.send(email);
  console.log("Email send successfully. Data:", email )
  return true;
};

module.exports = sendEmail;

// !Про особенности заполнения html: (текста самого письма)
/* Есть ограничения на использование некоторых продвинутых стилей и технологий в HTML-письмах, когда речь идет о их отображении в почтовых клиентах.
Некоторые почтовые клиенты могут не поддерживать или иметь ограниченную поддержку для CSS Flexbox и Grid Layout.
Использование внешних таблиц стилей (CSS в отдельном файле) может вызвать проблемы в некоторых почтовых клиентах. Рекомендуется использовать встроенные стили прямо в HTML.
Использование относительных размеров (например, % или em) может вести к несогласованному отображению в различных почтовых клиентах. Рекомендуется использовать фиксированные размеры.
События JavaScript, такие как onclick или onmouseover, обычно не поддерживаются.
На помощь может прийти EJS (Embedded JavaScript). Это шаблонизатор для JavaScript, который позволяет вам внедрять JavaScript код в HTML. Он может быть полезным для динамического формирования HTML-кода, в том числе для создания email-сообщений с различными стилями.
Используется так: `html: ejs.render('текст')`
Устанавливается так: `npm install ejs` */
